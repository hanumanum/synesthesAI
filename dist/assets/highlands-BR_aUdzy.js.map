{"version":3,"file":"highlands-BR_aUdzy.js","sources":["../../src/sketches/highlands.ts"],"sourcesContent":["import p5 from 'p5';\n\ninterface Mountain {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  color: p5.Color;\n  shadowPhase: number;\n}\n\ninterface Caravan {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  size: number;\n  color: p5.Color;\n  trail: { x: number; y: number; alpha: number }[];\n  phase: number;\n}\n\ninterface Star {\n  x: number;\n  y: number;\n  size: number;\n  brightness: number;\n  twinklePhase: number;\n}\n\ninterface Storm {\n  x: number;\n  y: number;\n  size: number;\n  intensity: number;\n  phase: number;\n}\n\nconst sketch = (p: p5) => {\n  let mountains: Mountain[] = [];\n  let caravans: Caravan[] = [];\n  let stars: Star[] = [];\n  let storms: Storm[] = [];\n  let time = 0;\n  let dawnPhase = 0;\n  let isDawnBreaking = false;\n  let canvasWidth: number;\n  let canvasHeight: number;\n  let baseHeight: number;\n  let skyGradient: p5.Graphics;\n  let mountainBuffer: p5.Graphics;\n\n  p.setup = () => {\n    const canvas = p.createCanvas(p.windowWidth, p.windowHeight);\n    canvas.parent('sketch-container');\n    p.colorMode(p.HSB, 360, 100, 100, 1);\n    \n    canvasWidth = p.width;\n    canvasHeight = p.height;\n    baseHeight = canvasHeight * 0.7;\n    \n    // Create off-screen buffers\n    skyGradient = p.createGraphics(canvasWidth, canvasHeight);\n    mountainBuffer = p.createGraphics(canvasWidth, canvasHeight);\n    skyGradient.colorMode(p.HSB, 360, 100, 100, 1);\n    mountainBuffer.colorMode(p.HSB, 360, 100, 100, 1);\n    \n    initializeMountains();\n    initializeCaravans();\n    initializeStars();\n    initializeStorms();\n  };\n\n  function initializeMountains() {\n    mountains = [];\n    const mountainCount = 15;\n    const baseWidth = canvasWidth / mountainCount;\n    \n    for (let i = 0; i < mountainCount; i++) {\n      const x = i * baseWidth;\n      const width = baseWidth * (0.8 + p.random(0.4));\n      const height = canvasHeight * (0.3 + p.random(0.2));\n      const hue = 200 + p.random(20); // Blue-gray tones\n      \n      mountains.push({\n        x,\n        y: baseHeight - height,\n        width,\n        height,\n        color: p.color(hue, 40, 60, 0.8),\n        shadowPhase: p.random(p.TWO_PI)\n      });\n    }\n  }\n\n  function initializeCaravans() {\n    caravans = [];\n    const caravanCount = 3;\n    \n    for (let i = 0; i < caravanCount; i++) {\n      const x = p.random(canvasWidth * 0.2, canvasWidth * 0.8);\n      const y = baseHeight - p.random(50, 150);\n      \n      caravans.push({\n        x,\n        y,\n        vx: p.random(-0.5, 0.5),\n        vy: p.random(-0.2, 0.2),\n        size: p.random(20, 30),\n        color: p.color(30, 70, 90, 0.8), // Warm brown\n        trail: [],\n        phase: p.random(p.TWO_PI)\n      });\n    }\n  }\n\n  function initializeStars() {\n    stars = [];\n    const starCount = 100;\n    \n    for (let i = 0; i < starCount; i++) {\n      stars.push({\n        x: p.random(canvasWidth),\n        y: p.random(baseHeight * 0.5),\n        size: p.random(1, 3),\n        brightness: p.random(0.5, 1),\n        twinklePhase: p.random(p.TWO_PI)\n      });\n    }\n  }\n\n  function initializeStorms() {\n    storms = [];\n    const stormCount = 2;\n    \n    for (let i = 0; i < stormCount; i++) {\n      storms.push({\n        x: p.random(canvasWidth),\n        y: p.random(baseHeight * 0.3, baseHeight * 0.6),\n        size: canvasWidth * (0.2 + p.random(0.3)),\n        intensity: 0,\n        phase: p.random(p.TWO_PI)\n      });\n    }\n  }\n\n  p.draw = () => {\n    time += 0.01;\n    \n    // Update sky gradient\n    updateSkyGradient();\n    \n    // Draw background\n    p.background(0, 0, 5);\n    p.image(skyGradient, 0, 0);\n    \n    // Update and draw elements\n    updateAndDrawStars();\n    updateAndDrawStorms();\n    updateAndDrawMountains();\n    updateAndDrawCaravans();\n    \n    // Handle dawn effect\n    if (isDawnBreaking) {\n      updateDawn();\n    }\n  };\n\n  function updateSkyGradient() {\n    skyGradient.clear();\n    const gradient = skyGradient.drawingContext.createLinearGradient(\n      0, 0,\n      0, baseHeight\n    );\n    \n    // Base night colors\n    let topHue = 240; // Deep blue\n    let topSat = 30;\n    let topBright = 10;\n    let bottomHue = 220;\n    let bottomSat = 40;\n    let bottomBright = 20;\n    \n    // Add dawn effect\n    if (isDawnBreaking) {\n      const dawnProgress = p.sin(dawnPhase) * 0.5 + 0.5;\n      topHue = p.lerp(240, 30, dawnProgress); // Blue to orange\n      topSat = p.lerp(30, 80, dawnProgress);\n      topBright = p.lerp(10, 60, dawnProgress);\n      bottomHue = p.lerp(220, 40, dawnProgress);\n      bottomSat = p.lerp(40, 90, dawnProgress);\n      bottomBright = p.lerp(20, 70, dawnProgress);\n    }\n    \n    gradient.addColorStop(0, p.color(topHue, topSat, topBright, 1));\n    gradient.addColorStop(1, p.color(bottomHue, bottomSat, bottomBright, 1));\n    \n    skyGradient.drawingContext.fillStyle = gradient;\n    skyGradient.drawingContext.fillRect(0, 0, canvasWidth, baseHeight);\n  }\n\n  function updateAndDrawStars() {\n    p.push();\n    p.blendMode(p.ADD);\n    \n    stars.forEach(star => {\n      star.twinklePhase += 0.02;\n      const twinkle = p.sin(star.twinklePhase) * 0.3 + 0.7;\n      const alpha = star.brightness * twinkle * (isDawnBreaking ? (1 - dawnPhase / p.PI) : 1);\n      \n      p.fill(60, 20, 100, alpha);\n      p.noStroke();\n      p.ellipse(star.x, star.y, star.size);\n    });\n    \n    p.pop();\n  }\n\n  function updateAndDrawStorms() {\n    storms.forEach(storm => {\n      storm.phase += 0.01;\n      storm.intensity = p.sin(storm.phase) * 0.5 + 0.5;\n      \n      // Draw storm cloud\n      p.push();\n      p.noStroke();\n      for (let i = 0; i < 5; i++) {\n        const alpha = (1 - i / 5) * 0.3 * storm.intensity;\n        p.fill(240, 30, 20, alpha);\n        p.ellipse(\n          storm.x + p.sin(time + i) * 20,\n          storm.y + p.cos(time + i) * 10,\n          storm.size * (1 - i * 0.1)\n        );\n      }\n      p.pop();\n    });\n  }\n\n  function updateAndDrawMountains() {\n    mountainBuffer.clear();\n    mountainBuffer.push();\n    \n    // Draw mountains with shadows\n    mountains.forEach(mountain => {\n      mountain.shadowPhase += 0.005;\n      const shadowOffset = p.sin(mountain.shadowPhase) * 10;\n      \n      // Draw mountain shadow\n      mountainBuffer.fill(240, 40, 20, 0.3);\n      mountainBuffer.noStroke();\n      mountainBuffer.beginShape();\n      mountainBuffer.vertex(mountain.x, baseHeight);\n      mountainBuffer.vertex(mountain.x + mountain.width, baseHeight);\n      mountainBuffer.vertex(mountain.x + mountain.width/2 + shadowOffset, mountain.y);\n      mountainBuffer.endShape(p.CLOSE);\n      \n      // Draw mountain\n      mountainBuffer.fill(mountain.color);\n      mountainBuffer.beginShape();\n      mountainBuffer.vertex(mountain.x, baseHeight);\n      mountainBuffer.vertex(mountain.x + mountain.width, baseHeight);\n      mountainBuffer.vertex(mountain.x + mountain.width/2, mountain.y);\n      mountainBuffer.endShape(p.CLOSE);\n    });\n    \n    mountainBuffer.pop();\n    p.image(mountainBuffer, 0, 0);\n  }\n\n  function updateAndDrawCaravans() {\n    caravans.forEach(caravan => {\n      // Update position\n      caravan.x += caravan.vx;\n      caravan.y += caravan.vy;\n      caravan.phase += 0.05;\n      \n      // Keep caravans within bounds\n      if (caravan.x < 0) caravan.x = canvasWidth;\n      if (caravan.x > canvasWidth) caravan.x = 0;\n      if (caravan.y < baseHeight * 0.3) caravan.y = baseHeight * 0.3;\n      if (caravan.y > baseHeight - 50) caravan.y = baseHeight - 50;\n      \n      // Update trail\n      caravan.trail.unshift({ x: caravan.x, y: caravan.y, alpha: 1 });\n      if (caravan.trail.length > 20) caravan.trail.pop();\n      \n      // Draw trail\n      p.push();\n      p.noStroke();\n      caravan.trail.forEach((point, i) => {\n        const alpha = (1 - i / caravan.trail.length) * 0.3;\n        p.fill(30, 70, 90, alpha);\n        p.ellipse(point.x, point.y, caravan.size * (1 - i / caravan.trail.length));\n      });\n      \n      // Draw caravan\n      p.fill(caravan.color);\n      p.ellipse(caravan.x, caravan.y, caravan.size);\n      \n      // Add movement effect\n      const wobble = p.sin(caravan.phase) * 2;\n      p.fill(30, 70, 90, 0.5);\n      p.ellipse(caravan.x + wobble, caravan.y + wobble, caravan.size * 0.8);\n      \n      p.pop();\n    });\n  }\n\n  function updateDawn() {\n    dawnPhase += 0.01;\n    if (dawnPhase >= p.PI) {\n      isDawnBreaking = false;\n      dawnPhase = 0;\n    }\n  }\n\n  p.mousePressed = () => {\n    // Toggle dawn effect\n    isDawnBreaking = true;\n    dawnPhase = 0;\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n    canvasWidth = p.width;\n    canvasHeight = p.height;\n    baseHeight = canvasHeight * 0.7;\n    \n    // Resize buffers\n    skyGradient.resizeCanvas(canvasWidth, canvasHeight);\n    mountainBuffer.resizeCanvas(canvasWidth, canvasHeight);\n    \n    // Reinitialize elements\n    initializeMountains();\n    initializeCaravans();\n    initializeStars();\n    initializeStorms();\n  };\n};\n\nnew p5(sketch);"],"names":["sketch","p","mountains","caravans","stars","storms","time","dawnPhase","isDawnBreaking","canvasWidth","canvasHeight","baseHeight","skyGradient","mountainBuffer","initializeMountains","initializeCaravans","initializeStars","initializeStorms","mountainCount","baseWidth","i","x","width","height","hue","caravanCount","y","starCount","stormCount","updateSkyGradient","updateAndDrawStars","updateAndDrawStorms","updateAndDrawMountains","updateAndDrawCaravans","updateDawn","gradient","topHue","topSat","topBright","bottomHue","bottomSat","bottomBright","dawnProgress","star","twinkle","alpha","storm","mountain","shadowOffset","caravan","point","wobble","p5"],"mappings":"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"}