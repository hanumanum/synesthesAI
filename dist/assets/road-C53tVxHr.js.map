{"version":3,"file":"road-C53tVxHr.js","sources":["../../src/sketches/road.ts"],"sourcesContent":["import p5 from 'p5';\n\ninterface Particle {\n  pos: p5.Vector;\n  vel: p5.Vector;\n  acc: p5.Vector;\n  color: p5.Color;\n  size: number;\n  path: p5.Vector[];\n  maxPathLength: number;\n  isActive: boolean;\n  targetPath: number; // 0 for left path, 1 for right path\n  age: number;\n  maxAge: number;\n}\n\nclass RoadVisualization {\n  private p: p5;\n  private particles: Particle[] = [];\n  private numParticles = 150;\n  private paths: p5.Vector[][] = [];\n  private mousePos: p5.Vector;\n  private interactionRadius = 150;\n  private currentStanza = 0;\n  private lastStanzaChange = 0;\n  private stanzaDuration = 12000; // 12 seconds per stanza\n  private leafParticles: Particle[] = [];\n  private numLeafParticles = 50;\n  private yellowWood: p5.Color;\n  private autumnColors: p5.Color[];\n\n  constructor(p: p5) {\n    this.p = p;\n    this.mousePos = p.createVector(0, 0);\n    this.yellowWood = p.color(255, 200, 50);\n    this.autumnColors = [\n      p.color(255, 200, 50),  // Yellow\n      p.color(255, 150, 0),   // Orange\n      p.color(200, 100, 0),   // Brown\n      p.color(255, 100, 50)   // Red-orange\n    ];\n    this.initializePaths();\n    this.initializeLeafParticles();\n  }\n\n  private initializePaths() {\n    // Create two diverging paths\n    const startX = this.p.width * 0.2;\n    const startY = this.p.height * 0.5;\n    const divergenceX = this.p.width * 0.4;\n    const endX = this.p.width * 0.8;\n\n    // Create curved paths using bezier points\n    // Left path\n    this.paths[0] = [\n      this.p.createVector(startX, startY),\n      this.p.createVector(divergenceX, startY),\n      this.p.createVector(divergenceX + (endX - divergenceX) * 0.5, this.p.height * 0.35),\n      this.p.createVector(endX, this.p.height * 0.3)\n    ];\n\n    // Right path\n    this.paths[1] = [\n      this.p.createVector(startX, startY),\n      this.p.createVector(divergenceX, startY),\n      this.p.createVector(divergenceX + (endX - divergenceX) * 0.5, this.p.height * 0.65),\n      this.p.createVector(endX, this.p.height * 0.7)\n    ];\n\n    // Create particles\n    for (let i = 0; i < this.numParticles; i++) {\n      this.createParticle();\n    }\n  }\n\n  private initializeLeafParticles() {\n    for (let i = 0; i < this.numLeafParticles; i++) {\n      this.createLeafParticle();\n    }\n  }\n\n  private createLeafParticle() {\n    const x = this.p.random(this.p.width * 0.3, this.p.width * 0.7);\n    const y = this.p.random(this.p.height * 0.2, this.p.height * 0.8);\n    \n    const particle: Particle = {\n      pos: this.p.createVector(x, y),\n      vel: this.p.createVector(this.p.random(-0.5, 0.5), this.p.random(-0.5, 0.5)),\n      acc: this.p.createVector(0, 0),\n      color: this.p.random(this.autumnColors),\n      size: this.p.random(3, 6),\n      path: [],\n      maxPathLength: 20,\n      isActive: true,\n      targetPath: 0,\n      age: 0,\n      maxAge: this.p.random(200, 400)\n    };\n\n    this.leafParticles.push(particle);\n  }\n\n  private createParticle() {\n    const startPos = this.p.createVector(\n      this.p.width * 0.2,\n      this.p.height * 0.5 + this.p.random(-20, 20)\n    );\n\n    const particle: Particle = {\n      pos: startPos.copy(),\n      vel: this.p.createVector(this.p.random(0.5, 1.5), 0),\n      acc: this.p.createVector(0, 0),\n      color: this.p.color(255, 200, 50, 150),\n      size: this.p.random(2, 4),\n      path: [startPos.copy()],\n      maxPathLength: 50,\n      isActive: true,\n      targetPath: this.p.random() < 0.5 ? 0 : 1,\n      age: 0,\n      maxAge: this.p.random(300, 500)\n    };\n\n    this.particles.push(particle);\n  }\n\n  private updateParticles() {\n    const currentTime = this.p.millis();\n    if (currentTime - this.lastStanzaChange > this.stanzaDuration) {\n      this.currentStanza = (this.currentStanza + 1) % 4;\n      this.lastStanzaChange = currentTime;\n      this.resetParticles();\n    }\n\n    // Update main particles\n    for (let particle of this.particles) {\n      if (!particle.isActive) continue;\n\n      particle.age++;\n      if (particle.age > particle.maxAge) {\n        particle.isActive = false;\n        this.createParticle();\n        continue;\n      }\n\n      // Calculate distance to mouse\n      const d = this.p.dist(\n        particle.pos.x,\n        particle.pos.y,\n        this.mousePos.x,\n        this.mousePos.y\n      );\n\n      // Apply mouse interaction\n      if (d < this.interactionRadius) {\n        const force = this.p.createVector(\n          particle.pos.x - this.mousePos.x,\n          particle.pos.y - this.mousePos.y\n        );\n        force.normalize();\n        force.mult(0.5);\n        particle.acc.add(force);\n      }\n\n      // Follow the chosen path using bezier curves\n      const targetPath = this.paths[particle.targetPath];\n      const t = this.getPathProgress(particle.pos, targetPath);\n      if (t !== null) {\n        const nextT = Math.min(t + 0.01, 1);\n        const currentPoint = this.getBezierPoint(targetPath, t);\n        const nextPoint = this.getBezierPoint(targetPath, nextT);\n        const desired = p5.Vector.sub(nextPoint, currentPoint);\n        desired.normalize();\n        desired.mult(0.5);\n        particle.acc.add(desired);\n      }\n\n      // Update physics\n      particle.vel.add(particle.acc);\n      particle.vel.limit(3);\n      particle.pos.add(particle.vel);\n      particle.acc.mult(0);\n\n      // Update path\n      particle.path.push(particle.pos.copy());\n      if (particle.path.length > particle.maxPathLength) {\n        particle.path.shift();\n      }\n\n      // Check if particle has reached the end\n      if (particle.pos.x > this.p.width * 0.9) {\n        particle.isActive = false;\n        this.createParticle();\n      }\n    }\n\n    // Update leaf particles\n    for (let particle of this.leafParticles) {\n      if (!particle.isActive) continue;\n\n      particle.age++;\n      if (particle.age > particle.maxAge) {\n        particle.isActive = false;\n        this.createLeafParticle();\n        continue;\n      }\n\n      // Add some random movement\n      particle.acc.add(this.p.createVector(\n        this.p.random(-0.1, 0.1),\n        this.p.random(-0.1, 0.1)\n      ));\n\n      // Add slight gravity\n      particle.acc.y += 0.05;\n\n      // Update physics\n      particle.vel.add(particle.acc);\n      particle.vel.limit(2);\n      particle.pos.add(particle.vel);\n      particle.acc.mult(0);\n\n      // Bounce off edges\n      if (particle.pos.x < 0 || particle.pos.x > this.p.width) {\n        particle.vel.x *= -0.8;\n      }\n      if (particle.pos.y < 0 || particle.pos.y > this.p.height) {\n        particle.vel.y *= -0.8;\n      }\n\n      // Update path\n      particle.path.push(particle.pos.copy());\n      if (particle.path.length > particle.maxPathLength) {\n        particle.path.shift();\n      }\n    }\n  }\n\n  private getPathProgress(pos: p5.Vector, path: p5.Vector[]): number | null {\n    let minDist = Infinity;\n    let progress = null;\n\n    for (let t = 0; t <= 1; t += 0.01) {\n      const point = this.getBezierPoint(path, t);\n      const d = this.p.dist(pos.x, pos.y, point.x, point.y);\n      if (d < minDist) {\n        minDist = d;\n        progress = t;\n      }\n    }\n\n    return progress;\n  }\n\n  private getBezierPoint(points: p5.Vector[], t: number): p5.Vector {\n    if (points.length === 4) {\n      return this.p.createVector(\n        this.p.bezierPoint(points[0].x, points[1].x, points[2].x, points[3].x, t),\n        this.p.bezierPoint(points[0].y, points[1].y, points[2].y, points[3].y, t)\n      );\n    }\n    return points[0];\n  }\n\n  private resetParticles() {\n    for (let particle of this.particles) {\n      particle.pos = this.p.createVector(\n        this.p.width * 0.2,\n        this.p.height * 0.5 + this.p.random(-20, 20)\n      );\n      particle.vel = this.p.createVector(this.p.random(0.5, 1.5), 0);\n      particle.acc = this.p.createVector(0, 0);\n      particle.path = [particle.pos.copy()];\n      particle.isActive = true;\n      particle.targetPath = this.p.random() < 0.5 ? 0 : 1;\n      particle.age = 0;\n    }\n  }\n\n  private drawPaths() {\n    this.p.stroke(255, 100);\n    this.p.strokeWeight(2);\n    this.p.noFill();\n\n    for (let path of this.paths) {\n      this.p.beginShape();\n      this.p.bezier(\n        path[0].x, path[0].y,\n        path[1].x, path[1].y,\n        path[2].x, path[2].y,\n        path[3].x, path[3].y\n      );\n      this.p.endShape();\n    }\n  }\n\n  private drawParticles() {\n    // Draw main particles\n    for (let particle of this.particles) {\n      if (!particle.isActive) continue;\n\n      // Draw particle path\n      this.p.noFill();\n      this.p.stroke(particle.color);\n      this.p.strokeWeight(particle.size * 0.5);\n      this.p.beginShape();\n      for (let point of particle.path) {\n        this.p.vertex(point.x, point.y);\n      }\n      this.p.endShape();\n\n      // Draw particle\n      this.p.noStroke();\n      this.p.fill(particle.color);\n      this.p.circle(particle.pos.x, particle.pos.y, particle.size);\n    }\n\n    // Draw leaf particles\n    for (let particle of this.leafParticles) {\n      if (!particle.isActive) continue;\n\n      this.p.noStroke();\n      this.p.fill(particle.color);\n      this.p.push();\n      this.p.translate(particle.pos.x, particle.pos.y);\n      this.p.rotate(particle.vel.heading());\n      this.p.beginShape();\n      this.p.vertex(0, -particle.size);\n      this.p.vertex(particle.size, 0);\n      this.p.vertex(0, particle.size);\n      this.p.vertex(-particle.size, 0);\n      this.p.endShape(this.p.CLOSE);\n      this.p.pop();\n    }\n  }\n\n  public draw() {\n    this.p.background(20, 20, 30);\n    \n    // Draw yellow wood background\n    this.p.noStroke();\n    for (let i = 0; i < 100; i++) {\n      const x = this.p.random(this.p.width);\n      const y = this.p.random(this.p.height);\n      const size = this.p.random(20, 40);\n      this.p.fill(this.yellowWood);\n      this.p.circle(x, y, size);\n    }\n\n    this.drawPaths();\n    this.updateParticles();\n    this.drawParticles();\n  }\n\n  public mouseMoved(x: number, y: number) {\n    this.mousePos.set(x, y);\n  }\n}\n\nexport default function sketch(p: p5) {\n  let visualization: RoadVisualization;\n\n  p.setup = () => {\n    const container = document.getElementById('sketch-container');\n    if (!container) {\n      console.error('Sketch container not found');\n      return;\n    }\n\n    const canvas = p.createCanvas(container.clientWidth, container.clientHeight);\n    canvas.parent('sketch-container');\n    visualization = new RoadVisualization(p);\n  };\n\n  p.draw = () => {\n    visualization.draw();\n  };\n\n  p.mouseMoved = () => {\n    visualization.mouseMoved(p.mouseX, p.mouseY);\n  };\n\n  p.windowResized = () => {\n    p.resizeCanvas(window.innerWidth, window.innerHeight);\n    visualization = new RoadVisualization(p);\n  };\n} \n\nnew p5(sketch);"],"names":["RoadVisualization","p","__publicField","startX","startY","divergenceX","endX","i","x","y","particle","startPos","currentTime","force","targetPath","t","nextT","currentPoint","nextPoint","desired","p5","pos","path","minDist","progress","point","d","points","size","sketch","visualization","container"],"mappings":"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"}