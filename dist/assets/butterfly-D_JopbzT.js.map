{"version":3,"file":"butterfly-D_JopbzT.js","sources":["../../src/sketches/butterfly.ts"],"sourcesContent":["import p5 from 'p5';\n\ninterface Particle {\n  position: p5.Vector;\n  velocity: p5.Vector;\n  acceleration: p5.Vector;\n  color: number[];\n  size: number;\n  maxSpeed: number;\n  originalPosition: p5.Vector;\n  connectionRadius: number;\n  type: 'wing' | 'trail' | 'sparkle';\n  phase: number;\n  life: number;\n  maxLife: number;\n  opacity: number;\n  targetOpacity: number;\n  wingAngle: number;\n  wingSpeed: number;\n}\n\nconst sketch = (p: p5) => {\n  let particles: Particle[] = [];\n  let time = 0;\n  let butterflyPhase = 0;\n  let journeyProgress = 0;\n  \n  // Theme colors for different particle types\n  const themeColors = {\n    wing: [255, 255, 255, 200],     // White - purity and lightness\n    trail: [200, 230, 255, 150],    // Light blue - ethereal trail\n    sparkle: [255, 255, 200, 180]   // Soft yellow - morning light\n  };\n\n  const createParticle = (x: number, y: number, type: Particle['type']): Particle => ({\n    position: p.createVector(x, y),\n    velocity: p.createVector(0, 0),\n    acceleration: p.createVector(0, 0),\n    color: themeColors[type],\n    size: type === 'wing' ? 8 : // Increased from 6\n          type === 'sparkle' ? 4 : // Increased from 3\n          5, // Increased from 4\n    maxSpeed: type === 'wing' ? 2.5 : // Increased from 2\n              type === 'sparkle' ? 2 : // Increased from 1.5\n              1.5, // Increased from 1\n    originalPosition: p.createVector(x, y),\n    connectionRadius: type === 'wing' ? 120 : // Increased from 90\n                     type === 'sparkle' ? 80 : // Increased from 60\n                     60, // Increased from 45\n    type,\n    phase: p.random(p.TWO_PI),\n    life: 0,\n    maxLife: type === 'sparkle' ? 150 : Infinity, // Increased from 120\n    opacity: 0,\n    targetOpacity: type === 'wing' ? 1 :\n                   type === 'sparkle' ? 0.8 :\n                   0.6,\n    wingAngle: 0,\n    wingSpeed: p.random(0.02, 0.05)\n  });\n\n  const createButterfly = (x: number, y: number) => {\n    // Create wing particles\n    const wingCount = 10; // Increased from 8\n    for (let i = 0; i < wingCount; i++) {\n      const angle = (i / wingCount) * p.TWO_PI;\n      const radius = 40; // Increased from 30\n      const wingX = x + p.cos(angle) * radius;\n      const wingY = y + p.sin(angle) * radius;\n      particles.push(createParticle(wingX, wingY, 'wing'));\n    }\n\n    // Create trail particles\n    const trailCount = 15; // Increased from 12\n    for (let i = 0; i < trailCount; i++) {\n      const angle = p.random(p.TWO_PI);\n      const radius = p.random(60, 90); // Increased from 45,75\n      const trailX = x + p.cos(angle) * radius;\n      const trailY = y + p.sin(angle) * radius;\n      particles.push(createParticle(trailX, trailY, 'trail'));\n    }\n  };\n\n  const createSparkles = (x: number, y: number) => {\n    const sparkleCount = 7; // Increased from 5\n    for (let i = 0; i < sparkleCount; i++) {\n      const angle = p.random(p.TWO_PI);\n      const radius = p.random(40, 80); // Increased from 30,60\n      const sparkleX = x + p.cos(angle) * radius;\n      const sparkleY = y + p.sin(angle) * radius;\n      particles.push(createParticle(sparkleX, sparkleY, 'sparkle'));\n    }\n  };\n\n  p.setup = () => {\n    const container = document.getElementById('sketch-container');\n    if (!container) {\n      console.error('Sketch container not found');\n      return;\n    }\n\n    const canvas = p.createCanvas(container.clientWidth, container.clientHeight);\n    canvas.parent('sketch-container');\n    p.background(0);\n    p.colorMode(p.RGB, 255, 255, 255, 255);\n\n  \n    // Create initial butterfly in center\n    createButterfly(p.width * 0.5, p.height * 0.5);\n    \n    console.log(\"Welcome to 'Butterfly' - A visualization of Bashō's haiku\");\n    console.log(\"Controls:\");\n    console.log(\"- Move mouse to interact with the butterfly\");\n    console.log(\"- Press 'p' to pause/resume\");\n    console.log(\"- Press 'r' to reset\");\n  };\n\n  p.draw = () => {\n    p.background(0, 0, 0);\n\n    time += 0.01;\n    butterflyPhase = (butterflyPhase + 0.01) % p.TWO_PI;\n    journeyProgress = (journeyProgress + 0.001) % 1;\n    \n    // Create subtle gradient background\n    \n    p.noStroke();\n    for (let y = 0; y < p.height; y += 2) {\n      const alpha = p.map(y, 0, p.height, 40, 10);\n      p.fill(0, 0, 20, alpha);\n      p.rect(0, y, p.width, 2);\n    }\n\n    // Update and draw particles\n    particles = particles.filter(particle => {\n      // Update particle life\n      if (particle.type === 'sparkle') {\n        particle.life += 1;\n        if (particle.life > particle.maxLife) return false;\n      }\n\n      // Update wing movement\n      if (particle.type === 'wing') {\n        particle.wingAngle += particle.wingSpeed;\n        const wingOffset = p.sin(particle.wingAngle) * 30; // Increased from 22\n        particle.position.x = particle.originalPosition.x + wingOffset;\n        particle.position.y = particle.originalPosition.y + p.cos(particle.wingAngle) * 10; // Increased from 7\n      }\n\n      // Update trail movement\n      if (particle.type === 'trail') {\n        const trailForce = p5.Vector.sub(particle.originalPosition, particle.position);\n        trailForce.mult(0.01);\n        particle.acceleration.add(trailForce);\n      }\n\n      // Add gentle floating movement\n      const floatForce = p.createVector(\n        p.sin(time + particle.phase) * 0.3, // Increased from 0.2\n        p.cos(time + particle.phase) * 0.3  // Increased from 0.2\n      );\n      particle.acceleration.add(floatForce);\n\n      // Apply mouse force\n      if (p.mouseX > 0 && p.mouseY > 0) {\n        const dx = particle.position.x - p.mouseX;\n        const dy = particle.position.y - p.mouseY;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < 200) { // Increased from 150\n          const force = (1 - distance / 200) * 0.15; // Increased from 0.1\n          particle.acceleration.add(dx * force, dy * force);\n        }\n      }\n\n      // Update physics\n      particle.velocity.add(particle.acceleration);\n      particle.velocity.mult(0.98);\n      particle.velocity.limit(particle.maxSpeed);\n      particle.position.add(particle.velocity);\n      particle.acceleration.mult(0);\n\n      // Update opacity\n      particle.opacity = p.lerp(particle.opacity, particle.targetOpacity, 0.05);\n\n      // Draw particle\n      p.noStroke();\n      const alpha = particle.opacity * 255;\n      p.fill(particle.color[0], particle.color[1], particle.color[2], alpha);\n      \n      if (particle.type === 'sparkle') {\n        p.drawingContext.shadowBlur = 15; // Increased from 10\n        p.drawingContext.shadowColor = p.color(\n          particle.color[0],\n          particle.color[1],\n          particle.color[2],\n          alpha * 0.5\n        );\n      }\n\n      p.ellipse(particle.position.x, particle.position.y, particle.size);\n      p.drawingContext.shadowBlur = 0;\n\n      // Draw connections\n      particles.forEach(other => {\n        if (other !== particle) {\n          const distance = p5.Vector.dist(particle.position, other.position);\n          if (distance < particle.connectionRadius) {\n            const connectionStrength = 1 - distance / particle.connectionRadius;\n            const connectionAlpha = connectionStrength * 120 * particle.opacity; // Increased from 100\n            \n            if (particle.type === 'wing' && other.type === 'wing') {\n              p.stroke(particle.color[0], particle.color[1], particle.color[2], connectionAlpha * 0.8);\n              p.strokeWeight(2); // Increased from 1.5\n            } else if (particle.type === 'trail' || other.type === 'trail') {\n              p.stroke(particle.color[0], particle.color[1], particle.color[2], connectionAlpha * 0.4);\n              p.strokeWeight(1.5); // Increased from 1\n            } else {\n              p.stroke(particle.color[0], particle.color[1], particle.color[2], connectionAlpha * 0.6);\n              p.strokeWeight(1.5); // Increased from 1\n            }\n            \n            p.line(\n              particle.position.x,\n              particle.position.y,\n              other.position.x,\n              other.position.y\n            );\n          }\n        }\n      });\n\n      // Create sparkles occasionally\n      if (particle.type === 'wing' && p.random() < 0.015) { // Increased from 0.01\n        createSparkles(particle.position.x, particle.position.y);\n      }\n\n      return true;\n    });\n  };\n\n  p.windowResized = () => {\n    const container = document.getElementById('sketch-container');\n    if (!container) return;\n    p.resizeCanvas(container.clientWidth, container.clientHeight);\n    particles = [];\n    createButterfly(p.width * 0.5, p.height * 0.5);\n  };\n};\n\nnew p5(sketch); "],"names":["sketch","p","particles","time","butterflyPhase","themeColors","createParticle","x","y","type","createButterfly","i","angle","radius","wingX","wingY","trailCount","trailX","trailY","createSparkles","sparkleX","sparkleY","container","alpha","particle","wingOffset","trailForce","p5","floatForce","dx","dy","distance","force","other","connectionAlpha"],"mappings":"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"}